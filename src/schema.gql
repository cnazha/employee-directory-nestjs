# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateDepartmentInput {
  """Department name"""
  name: String!
}

type CreateDepartmentMutationResponse implements MutationResponse {
  item: Department
  message: String
  success: Boolean!
}

input CreateEmployeeInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Department {
  createdAt: DateTime
  id: ID!

  """Department name"""
  name: String!
  updatedAt: DateTime
}

type DepartmentsListResponse {
  hasNextPage: Boolean
  items: [Department!]
  page: Int!
  success: Boolean!
  totalCount: Int!
  totalPages: Int!
}

type Employee {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Mutation {
  createDepartment(createDepartmentInput: CreateDepartmentInput!): CreateDepartmentMutationResponse!
  createEmployee(createEmployeeInput: CreateEmployeeInput!): Employee!
  removeDepartment(id: String!): RemoveDepartmentMutationResponse!
  removeEmployee(id: Int!): Employee!
  updateDepartment(updateDepartmentInput: UpdateDepartmentInput!): UpdateDepartmentMutationResponse!
  updateEmployee(updateEmployeeInput: UpdateEmployeeInput!): Employee!
}

interface MutationResponse {
  message: String
  success: Boolean!
}

type Query {
  department(id: String!): Department!
  departments: DepartmentsListResponse!
  employee(id: Int!): Employee!
  employees: [Employee!]!
}

type RemoveDepartmentMutationResponse implements MutationResponse {
  item: Department
  message: String
  success: Boolean!
}

input UpdateDepartmentInput {
  id: String!

  """Department name"""
  name: String
}

type UpdateDepartmentMutationResponse implements MutationResponse {
  item: Department
  message: String
  success: Boolean!
}

input UpdateEmployeeInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}